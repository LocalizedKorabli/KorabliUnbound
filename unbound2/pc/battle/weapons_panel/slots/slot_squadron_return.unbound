(def element SlotSquadronReturn () layout=true
	(scope
		(var _activeSquadron:number = "DEFAULT_SQUADRON_OWNER_ID")
		(var currentSquadronEntity:gfx = "$datahub.getPrimaryEntity(CC.ownSquadron, _activeSquadron)")
		(var ownSquadronComponent:gfx = "currentSquadronEntity.ownSquadron")

		(var squadronCount:number = "currentSquadronEntity.health.value" (event "currentSquadronEntity.health.evValueChanged"))

		(var attackState:number = "ownSquadronComponent.attackState" (event "ownSquadronComponent.evAttackStateChanged"))
		(var flightState:number = "ownSquadronComponent.state" (event "ownSquadronComponent.evStateChanged"))

		(var cmdEntity:gfx = "$datahub.getPrimaryEntity(CC.commandMappingCommandName, 'CMD_LAND')")
		(var commandId:number = "cmdEntity.commandMappingCommand.id" (event "cmdEntity.commandMappingCommand.evChanged"))

		(var isNotLastAttack:bool = "attackState == SC.Battle.SQUADRON_ATTACK_STATE.MAIN_SQUADRON_ATTACK && squadronCount != 0")

		(macro IS_ALIVE)

		(var itemImageUrl:str ='url:../aircraft/plane_return.png')
		(var isLocked:bool = "isNotLastAttack || isIn(attackState,  SC.Battle.SQUADRON_ATTACK_STATE.LOCK_RETURN_ATTACKER_STATE) || !isAlive || (flightState == AIRPLANE_FLIGHT_STATE_LAUNCHING)")

		(var _width:number = "SLOT_SIZE")
		(var _height:number = "SLOT_SIZE")
	)

	(style
		(width = "_width")
		(height = "_height")
	)

	(controller $Tooltip
		(renderer='SimpleStatusTooltip')
		(args
			_text = 'IDS_BATTLE_HINT_SQUADRON_CONTROL_RETURN'
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
		(align="bottom|center")
		(position="border")
		(offset=[0, 20])
		(screenBoundsOffset={left:10, top:30, right:10, bottom:100})
	)

	(block
		(class $FullsizeAbsolute)

		(macro MOUSE_LMB_EXTERNAL_CALL 'direct.action' "['aircarrier.landPlane', []]" "!(isLocked)")

		(element SlotItem
			(scope
				(bind _itemImageUrl "itemImageUrl")
				(bind _isLocked "isLocked")
				(bind _isSelectable "commandId != null")
				(bind _width "_width")
				(bind _height "_height")
			)
		)
	)

	
	(element HotkeyIndicator _commandId="commandId"
		(style
			(bottom = "-HOTKEY_SIZE[SIZE.MEDIUM]")
			(position = "absolute")
			(hcenter = "0px")
		)
		(bind visible "commandId != 0")
	)
)