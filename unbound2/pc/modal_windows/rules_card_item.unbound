(def element RulesCardItem (_rulesName:str, _rulesList:array, _rulesBgCardIcon:str, _rulesMargin:number, _isBattle:bool=false)
	(scope
		(var rulesTextTypeList:array = "_rulesList[$index]._textTypes")
		(var rulesParagraphText:str = "'IDS_MODAL_WINDOW_' + _rulesName + '_RULES_PARAGRAPH_' + tr($index + 1)")
	)

	(style
		(width = "RULES_CARD_WIDTH")
		(height = "RULES_CARD_HEIGHT")
		(bind marginLeft "$index == 0 ? 0px : _rulesMargin")
	)

	(block
		(class $FullsizeAbsolute)
		(style (bind backgroundImage "_rulesBgCardIcon"))
		(controller $Spine)
	)

	(block
		(class $FullsizeAbsolute)
		(style
			(hitTest = false)
			(alpha = 0.05)
			(backgroundColor = "SC.Ui_styles.SERVICE_COLORS.WHITE")
		)
	)

	(block
		(class $FullsizeAbsolute)
		(style
			(hitTest = false)
			(alpha = 0.1)
			(scale9grid = 2)
			(backgroundImage = 'url:../service_kit/frames/one_pixel_frame.png')
		)
	)

	(block
		(style
			(width = 100%)
			(height = 200px)
			(bind backgroundImage "_rulesList[$index]._imagePath")
		)
	)

	(block
		(style
			(width = 100%)
			(bind visualOffsetY "_isBattle ? 100px : 0px")
		)

		(block
			(style
				(width = 100%)
				(paddingTop = "MS")
				(paddingLeft = "MS")
				(paddingRight = "MS")
			)
			(tf
				(class $TextDefaultBold21NM)
				(style (alpha = "TA"))
				(bind text "rulesParagraphText + '_HEADER'")
			)
		)

		(block
			(style
				(align = "center")
				(marginTop = 20px)
				(width = 100%)
				(height = 180px)
				(paddingLeft = "MS")
				(paddingRight = "MS")
				(paddingBottom = "MS")
			)

			(controller $Repeat renderer='RulesCardLine'
				(bind count "rulesTextTypeList.length")
				(args
					_rulesTextType = "rulesTextTypeList[$index]._type"
					_rulesArgs = "rulesTextTypeList[$index]._args"
					_rulesParagraphText = "rulesParagraphText + '_TEXT_' + tr($index + 1)"
				)
			)
		)
	)
)

(def element RulesCardLine (_rulesTextType:number, _rulesParagraphText:str, _rulesArgs:dict={})
	(style
		(width = 100%)
		(marginTop = "$index == 0 ? 0px : SXS")
		(marginBottom = "S")
	)

	(controller $Instance renderer='RepeatParagraphItemNM'
		(bind enabled "_rulesTextType == SC.Ui_common.MODAL_RULES_TEXT_TYPE.PARAGRAPH")
		(args
			_paragraphText = "_rulesParagraphText"
			_width = 100%
			_leading = -2
			_alpha = "TC"
		)
	)

	(controller $Instance renderer = 'RepeatRestriction'
		(bind enabled "_rulesTextType == SC.Ui_common.MODAL_RULES_TEXT_TYPE.RESTRICTION")
		(args
			_restrictionData = "_rulesArgs"
			_paragraphText = "_rulesParagraphText"
		)
	)
)

(def element RepeatRestriction (_restrictionData:dict, _paragraphText:str='')
	(scope
		(var restrictionsEntity:dhEntity = "getPrimaryEntity(_restrictionData._componentClass, _restrictionData._entityId)")
		(var hasShipListRestrictions:bool = "toBool(restrictionsEntity.shipListRestrictions)" (event "restrictionsEntity.shipListRestrictions.evUpdate"))
		(var hasDivisionRestrictions:bool = "toBool(restrictionsEntity.divisionRestrictions)" (event "restrictionsEntity.divisionRestrictions.evUpdate"))
		(var hasRestrictions:bool = "hasShipListRestrictions || hasDivisionRestrictions")
	)

	(style (width = 100%))

	(tf
		(class = '$TextDefaultNM')
		(style
			(width = 100%)
			(leading = -2)
			(alpha = "TC")
		)
		(bind text "_paragraphText")
	)

	(block
		(style (marginTop = "S"))
		(controller $Instance renderer = 'ShipRestrictions'
			(bind enabled "hasRestrictions")
			(args
				_restrictionsEntityId = "restrictionsEntity.id"
				_isCompactListShips = true
			)
		)
	)
)
