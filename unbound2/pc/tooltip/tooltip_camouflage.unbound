(def element CamouflageTooltip (_id:number, _isReward:bool=false, _amount:number=0, _fakeColorScheme:dict=null,
								_noMouseInstructions:bool=false, _rewardShipId:number=null)
	(scope
		(var shipEntityFromReward:gfx = "$datahub.getPrimaryEntity(CC.ship, _rewardShipId)")
		(var rewardShipNameIDS:str = "shipEntityFromReward ? toUpper(tr(shipEntityFromReward.ship.nameIDS)) : ''")

		(var exteriorEntity:gfx = "$datahub.getPrimaryEntity(CC.exteriorConfig, _id)")
		(var exteriorConfig:gfx = "exteriorEntity.exteriorConfig")
		(var ownCamouflageComponent:gfx = "exteriorEntity.ownCamouflage")
		(var hasOwnCamouflage:bool = "exteriorEntity.hasComponent(CC.ownCamouflage)")
		(var isCamouflage:bool = "exteriorConfig.type == SC.Exteriors.EXTERIOR_TYPE.CAMOUFLAGE")
		(var isPermoflage:bool = "exteriorConfig.type == SC.Exteriors.EXTERIOR_TYPE.PERMOFLAGE")

		(var camouflageName:str = "exteriorConfig.name")

		(var exteriorPriceName:str =	"exteriorConfig && !isCamouflage	? toString(_id) :
										hasOwnCamouflage					? 'CAMOUFLAGE_GROUP_' + ownCamouflageComponent.camoGroup
																			: ''")

		(struct camouflagePrice = PULL_PRICE(_entityId = "exteriorPriceName" _actionId = "SC.Common.PRICE_ACTION.BUY"))

		(macro USER_PREF_DATA)
		(var previewExteriorId:number = "toNumber(userPrefs.previewExteriorId)")
		(var isPreviewedExterior:bool = "previewExteriorId == _id")
		(var isAnotherExteriorPreviewed:bool = "previewExteriorId && !isPreviewedExterior")

		(macro PULL_SHIP_ID)
		(var shipEntity:gfx = " $datahub.getPrimaryEntity(CC.ship, playerShipId)")
		(var shipNameIDS:str = "shipEntity ? toUpper(tr(shipEntity.ship.nameIDS)) : ''")

		(var ownShipInfo:gfx = "shipEntity.ownShip"	(event "shipEntity.ship.evUpdate") (event "shipEntity.ship.evCurrentSkinChanged"))

		(var isNeedRepair:bool =	"ownShipInfo ? ownShipInfo.isNeedRepair : false"	(event "ownShipInfo.evUpdateDockState"))
		(var isLocked:bool =		"ownShipInfo ? ownShipInfo.isLocked : false"		(event "ownShipInfo.evUpdateLock"))
		(var isInFormation:bool =	"ownShipInfo ? ownShipInfo.isInFormation : false"	(event "ownShipInfo.evUpdateLock"))

		(var permoflageFirstBuyGoldDiscount:number = "ownShipInfo ? ownShipInfo.permoflageFirstBuyGoldDiscount : 0"	(event "ownShipInfo.evPermoflageFirstBuyGoldDiscountChanged"))

		(var isFirstBuyDiscount:bool = "!isCamouflage && permoflageFirstBuyGoldDiscount")
		(var finalCamouflagePriceInfo:dict = "	isFirstBuyDiscount && camouflagePrice.info	? {	currency: SC.Common.CURRENCIES.GOLD,
																								finalPrice: camouflagePrice.info.basePrice - permoflageFirstBuyGoldDiscount } :
												camouflagePrice.info						?	camouflagePrice.info
																							:	null")

		(var exteriorEntityId:number = "exteriorEntity.id")

		(var camoColorSchemes:array = "hasOwnCamouflage ? ownCamouflageComponent.camoColorSchemes : []" (event "ownCamouflageComponent.evUpdated"))
		(var hasColorSchemeConfig:bool = "hasOwnCamouflage ? ownCamouflageComponent.hasColorSchemeConfig : false" (event "ownCamouflageComponent.evUpdated"))

		(var isLinkedToShip:bool = "hasOwnCamouflage ? ownCamouflageComponent.isLinkedToShip : false" (event "ownCamouflageComponent.evUpdated"))
		(var exteriorsInStorage:number = "hasOwnCamouflage ? exteriorEntity.countComponent.value : 0" (event "exteriorEntity.countComponent.evUpdate"))

		(struct peculiarityPref = GET_PREF_BOOL(_option = "'ui.peculiarityEnabled'"))
		(var isPeculiarityDisabled:bool = "exteriorConfig.peculiarity && !peculiarityPref.value")

		(var isUnlinkedMSkin:bool = "	(exteriorConfig.type == SC.Exteriors.EXTERIOR_TYPE.MSKIN) &&
										((_isReward && !_rewardShipId) || (!_isReward && !isLinkedToShip))")

		(var isLinkedMSkin:bool = "	(exteriorConfig.type == SC.Exteriors.EXTERIOR_TYPE.MSKIN) &&
									((_isReward && _rewardShipId) || (!_isReward && isLinkedToShip))")

		
		(var amount:number = "_isReward	? _amount : exteriorsInStorage")
		(var isInstalled:bool = "exteriorEntity && exteriorEntity.hasComponent(CC.installedCamouflage) && !_isReward" (event "exteriorEntity.evAdded") (event "exteriorEntity.evRemoved"))
		(var isExpired:bool = "isInstalled && amount == 0 && !_isReward")
		(var isAmountVisible:bool = "amount > 0 && (isCamouflage || isUnlinkedMSkin)")
		(var isNotInStorageVisible:bool = "!amount && (isCamouflage || isUnlinkedMSkin) && !isExpired")
		

		(var canBeBought:bool = "exteriorConfig.canBuy && (isCamouflage || amount == 0)")
		(var camoUnpurchasable:bool = "!exteriorConfig.canBuy && isCamouflage")

		(var isPriceVisible:bool = "canBeBought && !_isReward && finalCamouflagePriceInfo")
		(var isNotForSaleVisible:bool = "camoUnpurchasable && !_isReward")

		(var isColorStatusVisible:bool = "hasColorSchemeConfig && !_isReward")
		(var isExteriorRestrictionsVisible:bool = "isUnlinkedMSkin && exteriorEntity.shipListRestrictions.selectedFilters.length")

		(var unifiedStatus:str = "	_isReward || isExpired	? SC.Ui_styles.UNIFIED_STATUS.DEFAULT :
									isInstalled				? SC.Ui_styles.UNIFIED_STATUS.CHECK
															: SC.Ui_styles.UNIFIED_STATUS.DEFAULT")

		
		(var useRepaintedIcon:bool = "camoColorSchemes.length > 0 || _fakeColorScheme")

		(var headerIconPath:str =	"isCamouflage	? ('url:../exteriors/camouflages/' + camouflageName + '.png') :
									isPermoflage	? ('url:../exteriors/permoflages/' + camouflageName + '.png')
													: ('url:../exteriors/skins/' + camouflageName + '.png')")

		(var headerIconType:number = "useRepaintedIcon	?	SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CAMO_REPAINT
														:	SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.SIMPLE")
		

		
		(var exteriorConfigNameUpper:str = "tr('IDS_' + toUpper(camouflageName))")
		(var shipName:str = "_rewardShipId ? rewardShipNameIDS : shipNameIDS")

		(var exteriorEntityRestrictions:gfx = "exteriorEntity.shipListRestrictions" (event "exteriorEntity.evAdded") (event "exteriorEntity.evRemoved"))
		(var exteriorEntityLevelFiltersRoman:str ="exteriorEntityRestrictions ? exteriorEntityRestrictions.levelString : ''" (event "exteriorEntityRestrictions.evUpdate"))
		(var hasLevelRestrictions:bool = "exteriorEntityLevelFiltersRoman.length > 0")

		(var headerText:str = "	isLinkedMSkin || isPermoflage ||
								exteriorConfig.type == SC.Exteriors.EXTERIOR_TYPE.SKIN	? subst('IDS_EXTERIOR_NAME_WITH_SHIP',  [], {	exteriorName: exteriorConfigNameUpper,
																																		shipName: shipName}) :
								hasLevelRestrictions									? subst('IDS_EXTERIOR_NAME_WITH_LEVEL', [], {	exteriorName: exteriorConfigNameUpper,
																																		levelRange: exteriorEntityLevelFiltersRoman })
																						: exteriorConfigNameUpper")

		(var subheaderText:str = "'IDS_EXTERIOR_TYPE_' + SC.Exteriors.EXTERIOR_TYPE.VALUE_TO_NAME[exteriorConfig.type]")

		(var additionalExteriorInfo:dict = "isCamouflage	?	null :
											amount == 0 	?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.INFINITE,
																	_text: 'IDS_PERMOFLAGE_AUTOREPLENISHMENT_BEFORE_PURCHASE_INFO'}
															:	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.INFINITE,
																	_text: 'IDS_PERMOFLAGE_AUTOREPLENISHMENT_AFTER_PURCHASE_INFO'}")

		(var mouseInstructionText:str = "	isPreviewedExterior							? 'IDS_MOUSE_INSTRUCTION_DISABLE_PREVIEW_CAMOUFLAGE' :
											isInstalled &&	isAnotherExteriorPreviewed	? 'IDS_MOUSE_INSTRUCTION_PREVIEW_CAMOUFLAGE' :
											isExpired 									? 'IDS_MOUSE_INSTRUCTION_DISABLE_PREINSTALL_CAMOUFLAGE' :
											isInstalled									? 'IDS_MOUSE_INSTRUCTION_TAKE_AWAY_CAMOUFLAGE' :
											isUnlinkedMSkin								? 'IDS_MOUSE_INSTRUCTION_PREVIEW_CAMOUFLAGE' :
											amount > 0 || isLinkedToShip				? 'IDS_MOUSE_INSTRUCTION_INSTALL_CAMOUFLAGE'
																						: 'IDS_MOUSE_INSTRUCTION_PREVIEW_CAMOUFLAGE'")

		(var mouseInstruction:dict = "	_noMouseInstructions	?	null :
										isInFormation			?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																		_text: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_OPERATE_EXTERIORS' } :
										isLocked				?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																		_text: 'IDS_LEAVE_BATTLE_FIRST_TO_OPERATE_EXTERIORS' } :
										isNeedRepair			?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																		_text: 'IDS_SERVICE_SHIP_TO_OPERATE_EXTERIORS' }
																:	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT,
																		_text: mouseInstructionText }")
	)
	(style (hitTest = false) (width = 320px))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderWithIconAndText
			_imageUrl =			"headerIconPath"
			_imageWidth =		60px
			_imageHeight =		60px
			_unifiedStatus =	"unifiedStatus"
			_headerText =		"headerText"
			_subheaderText =	"subheaderText"
			_headerIconType =	"headerIconType"
			_data =				"{ camouflageId: _id, fakeColorScheme: _fakeColorScheme }"
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isInstalled"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isInstalled")
				(args
					_unifiedStatus = "isExpired ? SC.Ui_styles.UNIFIED_STATUS.ATTENTION : SC.Ui_styles.UNIFIED_STATUS.CHECK"
					_text = "isExpired ? 'IDS_PREINSTALLED_CAMOUFLAGE' : 'IDS_INSTALLED'"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isAmountVisible || isNotInStorageVisible || isPriceVisible || isNotForSaleVisible"))
		)
		(element TOOLTIP_SYSTEM_ELEMENTS_GROUP
			(bind visible "isAmountVisible || isNotInStorageVisible || isPriceVisible || isNotForSaleVisible")

			(element TOOLTIP_SYSTEM_GROUP_ELEMENT
				(bind visible "isAmountVisible")
				(controller $Instance renderer='TooltipSystemCounterLine'
					(bind enabled "isAmountVisible")
					(args
						_title = "_isReward ? 'IDS_COUNT' : 'IDS_IN_WAREHOUSE'"
						_count = "amount"
						_isAutoWidth = true
					)
				)
			)

			(element TOOLTIP_SYSTEM_GROUP_ELEMENT
				(bind visible "isNotInStorageVisible")
				(controller $Instance renderer='TooltipSystemDescriptionText'
					(bind enabled "isNotInStorageVisible")
					(args
						_descriptionText = 'IDS_OUT_OF_STOCK'
					)
				)
			)

			(element TOOLTIP_SYSTEM_GROUP_ELEMENT
				(bind visible "isPriceVisible")
				(controller $Instance renderer='TooltipSystemPriceTagLine'
					(bind enabled "isPriceVisible")
					(args
						_title = 'IDS_COST_COLON'
						_priceInfo = "finalCamouflagePriceInfo"
						_isAutoWidth = true
					)
				)
			)

			(element TOOLTIP_SYSTEM_GROUP_ELEMENT
				(bind visible "isFirstBuyDiscount && isPriceVisible")
				(controller $Instance renderer='TooltipSystemStatusLine'
					(bind enabled "permoflageFirstBuyGoldDiscount")
					(args
						_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.SALE_AVAILABLE"
						_text = 'IDS_PERMOFLAGE_FIRST_BUY_DISCOUNT'
					)
				)
			)

			(element TOOLTIP_SYSTEM_GROUP_ELEMENT
				(bind visible "isNotForSaleVisible")
				(controller $Instance renderer='TooltipSystemDescriptionText'
					(bind enabled "isNotForSaleVisible")
					(args
						_descriptionText = 'IDS_UNAVAILABLE_UNIQUE_CAMOUFLAGE_FOR_PURCHASE'
					)
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isUnlinkedMSkin"))
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isUnlinkedMSkin")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.LINKED"
					_text = 'IDS_MSKIN_NOT_LINKED'
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isPeculiarityDisabled"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isPeculiarityDisabled")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.HIDDEN"
					_text = 'IDS_PECULIARITY_DISABLED_STATUS'
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "additionalExteriorInfo"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "additionalExteriorInfo")
				(args
					_unifiedStatus = "additionalExteriorInfo._unifiedStatus"
					_text = "additionalExteriorInfo._text"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isExteriorRestrictionsVisible"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemEntityRestrictionBlock'
				(bind enabled "isExteriorRestrictionsVisible")
				(args
					_restrictionsEntityId = "exteriorEntityId"
					_restrictionsIDS = 'IDS_INSTALL_RESTRICTION_MSKIN'
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isColorStatusVisible"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isColorStatusVisible")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.REPAINTED"
					_text = 'IDS_ALTERNATIVE_COLOR_SCHEME'
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "mouseInstruction"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "mouseInstruction")
				(args
					_unifiedStatus = "mouseInstruction._unifiedStatus"
					_text = "mouseInstruction._text"
				)
			)
		)
	)
)
