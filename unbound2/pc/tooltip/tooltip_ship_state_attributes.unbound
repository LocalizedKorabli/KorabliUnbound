(def element ShipStateAttributesTooltip (_stateEntity:gfx)
	(scope
		(var state:gfx = "_stateEntity.state")
		(var stateType:number = "state.type")

		(var stateStatus:gfx = "state.status" (event "state.evStatusChanged"))
		(var isColorTransformed:bool = "isIn(stateType, [SC.Battle.ENTITY_STATES.SHIP_PARAMS_CHANGE_BY_BUFFS])")
		(var iconColorTransform:dict = "isColorTransformed ? BUFF_COLOR_TRANSFORMS[SC.Common.PORT_BUFF_STATE.VALUE_TO_NAME[stateStatus]] : {}")

		(var battleConsumableEntity:gfx = "$datahub.getPrimaryEntity(CC.battleConsumable, state.id + '_' + state.squadronOwnerId)")
		(var ownerId:number = "battleConsumableEntity.id ?: 0")

		(var battleConsumableComponent:gfx = "battleConsumableEntity.battleConsumable")
		(var attributesComponent:gfx = "battleConsumableEntity.attributes ?: _stateEntity.attributes")
		(var attributesNegative:array = "attributesComponent.negative ?: []" (event "attributesComponent.evChanged"))
		(var attributesPositive:array = "attributesComponent.positive ?: []" (event "attributesComponent.evChanged"))
		(var attributesNeutral:array = "attributesComponent.neutral ?: []" (event "attributesComponent.evChanged"))
		(var attributesVisible:bool = "attributesNegative.length > 0 || attributesPositive.length > 0 || attributesNeutral.length > 0")

		(var isDamagedModuleWithDesc:bool = "isIn(SC.Battle.DAMAGE_MODULES[toUpper(state.id)], SC.Battle.DAMAGE_MODULES.WITH_DESCRIPTION)")

		(var iconPath:str = "state.iconPath" (event "state.evVisualDataChanged"))
		(var header:str = "state.header" (event "state.evVisualDataChanged"))
		(var subHeader:str = "state.subHeader" (event "state.evVisualDataChanged"))
		(var description:str = "state.description" (event "state.evVisualDataChanged"))
	)
	(style (width = 340) (hitTest = false))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)


	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHeaderWithIconAndText'
				(args
					_imageUrl="iconPath"
					_imageWidth=60
					_imageHeight=60
					_unifiedStatus=''
					_headerText="header"
					_subheaderText="subHeader"
					_data = "{colorTransform: iconColorTransform}"
				)
			)
		)

		(controller $Instance renderer='TooltipSystemHorizontalDivider'
			(bind enabled "description && description != ' '")
		)
		(block
			(bind visible "description && description != ' '")
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemDescriptionText'
				(bind enabled "description && description != ' '")
				(args
					_descriptionText="description"
				)
			)
		)

		(controller $Instance renderer='TooltipSystemHorizontalDivider'
			(bind enabled "attributesVisible")
		)
		(block
			(bind visible "attributesVisible")
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemParamsModifiersList'
				(bind enabled "attributesVisible")
				(args
					_attributesNegative="attributesNegative"
					_attributesPositive="attributesPositive"
					_attributesNeutral="attributesNeutral"
					_ownerId="ownerId"
				)
			)
		)
	)
)

(def layout SpecialStateAttributesTooltip (_stateEntity:gfx)
	(scope
		(var state:gfx = "_stateEntity.state")
		(var stateType:number = "state.type" (event "state.evTypeChanged"))

		(var selfVehicleWatcher:gfx = "$datahub.getFirstWatcher(CC.selfVehicle)")
		(var selfVehicleEntity:gfx = "selfVehicleWatcher.entity" (event "selfVehicleWatcher.event"))
		(var shipTTX:gfx = "selfVehicleEntity.selfVehicle.shipTTX")

		(var rageModeSlotEntity:gfx = "$datahub.getPrimaryEntity(CC.visualSlotData, SC.Ships.SHIP_INFO_WEAPON_TYPE.VALUE_TO_NAME[SC.Ships.SHIP_INFO_WEAPON_TYPE.RAGE_MODE] + '_' + DEFAULT_AVATAR_ID)")
		(var rageModeSlotComponent:gfx = "rageModeSlotEntity.visualSlotData")
		(var fireModeSlotEntity:gfx = "$datahub.getPrimaryEntity(CC.visualSlotData, SC.Ships.SHIP_INFO_WEAPON_TYPE.VALUE_TO_NAME[SC.Ships.SHIP_INFO_WEAPON_TYPE.FIRE_MODE] + '_' + DEFAULT_AVATAR_ID)")
		(var fireModeComponent:gfx = "fireModeSlotEntity.visualSlotData")

		(var isRageMode:bool = "stateType == SC.Battle.ENTITY_STATES.SHIP_PARAMS_CHANGE_BY_RAGE_MODE")

		(var iconPath:str = "isRageMode ? rageModeSlotComponent.iconPath : fireModeComponent.iconPath")
		(var description:str = "isRageMode ? rageModeSlotComponent.description : fireModeComponent.description")
		(var header:str = "isRageMode ? rageModeSlotComponent.title : fireModeComponent.title")
		(var subHeader:str = "isRageMode ? 'IDS_RAGE_MODE_SUBTITLE' : 'IDS_SHIP_PARAM_ACTIVE_EFFECT_TYPE_FIRE_MODE'")
	)

	(style (width = 340px) (hitTest = false))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHeaderWithIconAndText'
				(args
					_imageUrl="iconPath"
					_imageWidth=60
					_imageHeight=60
					_unifiedStatus=''
					_headerText="header"
					_subheaderText="subHeader"
				)
			)
		)

		(controller $Instance renderer='TooltipSystemHorizontalDivider'
			(bind enabled "description")
		)
		(block
			(bind visible "description")
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemDescriptionText'
				(bind enabled "description")
				(args
					_descriptionText="description"
				)
			)
		)
		(element TooltipSystemHorizontalDivider)
		(controller $Instance renderer='rageMode_ParametersForBattle'
			(bind enabled "isRageMode")
			(args
				_shipTTX="shipTTX"
				_isFull=false
				_isRageModeParamsHeaderVisible=false
			)
		)
		(controller $Instance renderer='fireMode_ParametersForBattle'
			(bind enabled "!isRageMode")
			(args "shipTTX" "selfVehicleEntity.id")
		)
	)
)
