(def constant UI_ELEM_OF_3D_OBJECT "{
	SC.Common.INTERACTIVE_OBJECT_TYPES.MODEL_ARMOR:			{ tooltip: 'ArmorTooltip' },
	SC.Common.INTERACTIVE_OBJECT_TYPES.MAP_REGION:			{ elem: 'StrategicOperationAreaObject',	tooltip: 'StrategicOperationAreaTooltip' } ,
	SC.Common.INTERACTIVE_OBJECT_TYPES.BUTTON_RADIO:		{ elem: 'ButtonOfRadioObject' },
	SC.Common.INTERACTIVE_OBJECT_TYPES.INTERACTIVE_MODEL:	{ elem: 'InteractiveModelObject' }
}")


(def element EmptyTooltipFor3D (_object3DEntity:gfx))

(def element InteractionWith3dObjectsLayer ()
	(macro MODAL_WINDOW_INIT)

	(scope
		(event evShow3DTooltip)
		(event evHide3DTooltip)

		(var object3DWatcher:gfx = "$datahub.getFirstWatcher(CC.interactiveObjectUnderCursor)")
		(var object3DEntity:gfx = "object3DWatcher.entity" (event "object3DWatcher.event"))
		(var interactiveObject:gfx = "object3DEntity.interactiveObject")
		(var objectType:str =	"interactiveObject.objectType"	(event "interactiveObject.evChanged"))

		(var renderedElem:str = "objectType && ('elem' in UI_ELEM_OF_3D_OBJECT[objectType])		? UI_ELEM_OF_3D_OBJECT[objectType].elem		: ''")
		(var tooltipElem:str = "objectType && ('tooltip' in UI_ELEM_OF_3D_OBJECT[objectType])	? UI_ELEM_OF_3D_OBJECT[objectType].tooltip	: 'EmptyTooltipFor3D'")
	)

	(dispatch evShow3DTooltip init=false (bind enabled "tooltipElem != 'EmptyTooltipFor3D'") (bind trigger "tooltipElem"))
	(dispatch evHide3DTooltip init=false (bind enabled "tooltipElem == 'EmptyTooltipFor3D'") (bind trigger "tooltipElem"))

	(style
		(bind width "stageWidth")
		(bind height "stageHeight")
	)

	(controller $Instance
		(bind enabled "renderedElem != ''")
		(bind renderer "renderedElem")
		(args
			_object3DEntity = "object3DEntity"
		)
	)

	(controller $Tooltip
		(bind renderer "tooltipElem")
		(args
			_object3DEntity = "object3DEntity"
		)
		(macro DEFAULT_TOOLTIP_CUSTOM_EVENTS_BEHAVIOUR
			_evShow = "evShow3DTooltip"
			_evHide = "evHide3DTooltip"
		)
	)
)

(def element StrategicOperationAreaObject (_object3DEntity:gfx)
	(scope
		(var interactiveObject:gfx =	"_object3DEntity.interactiveObject")
		(var objectType:str =			"interactiveObject.objectType"	(event "interactiveObject.evChanged"))
		(var objectId:number =			"interactiveObject.objectId"	(event "interactiveObject.evChanged"))
	)

	
	
	
	

	(bindcall externalCall "'inputMapping.onAction'" "['onActionInteractiveObject', { evType: 'leftMouseDown', objectType: objectType, objectId: objectId }]"	init=false watch=false	(event "interactiveObject.evLeftMouseClick"))
)

(def element ButtonOfRadioObject (_object3DEntity:gfx)
	(scope
		(var interactiveObject:gfx =	"_object3DEntity.interactiveObject")
		(var objectType:str =			"interactiveObject.objectType"	(event "interactiveObject.evChanged"))
		(var objectId:number =			"interactiveObject.objectId"	(event "interactiveObject.evChanged"))
	)

	(bindcall externalCall "'inputMapping.onAction'" "['onActionInteractiveObject', { evType: 'leftMouseDown', objectType: objectType, objectId: objectId }]"	init=false watch=false	(event "interactiveObject.evLeftMouseClick"))
)

(def element InteractiveModelObject (_object3DEntity:gfx)
	(scope
		(var interactiveObject:gfx =	"_object3DEntity.interactiveObject")
		(var objectType:str =			"interactiveObject.objectType"	(event "interactiveObject.evChanged"))
		(var objectId:number =			"interactiveObject.objectId"	(event "interactiveObject.evChanged"))
	)

	
	
	
	

	(bindcall externalCall "'inputMapping.onAction'" "['onActionInteractiveObject', { evType: 'leftMouseDown', objectType: objectType, objectId: objectId }]"	init=false watch=false	(event "interactiveObject.evLeftMouseClick"))
)