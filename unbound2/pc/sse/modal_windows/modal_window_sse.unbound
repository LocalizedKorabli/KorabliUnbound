(def element ModalWindowSse ()
	(macro MODAL_WINDOW_INIT)
	(scope
		(var sseWindowState:dhComponent = "getSingleEntity(CC.sseWindowState).sseWindowState")
		(var selectedCategoryId:str = "sseWindowState.selectedTag" (event "sseWindowState.evChanged"))
		(var isCommonTaskCategory:bool = "selectedCategoryId == SC.Sse.PREDEFINED_SSE_TAGS.COMMON")

		(var selectedSseTagEntity:dhEntity = "getPrimaryEntity(CC.sseTag, selectedCategoryId)")
		(var selectedSseTag:dhComponent = "selectedSseTagEntity.sseTag")
		(var sseTagName:str = "selectedSseTag.name" (event "selectedSseTag.evChanged"))
		(var sseEpicBackground:str = "selectedSseTag.background" (event "selectedSseTag.evChanged"))
		(var activeTasks:number = "selectedSseTag.activeAmount" (event "selectedSseTag.evChanged"))
		(var shipAcesSeasonEntity:dhEntity = "getSingleEntity(CC.shipAcesSeason)")
		(var shipAcesSeason:dhComponent = "shipAcesSeasonEntity.shipAcesSeason")
		(var shipAcesSeasonType:number = "shipAcesSeason.shipAcesType")
		(var isShipAcesSeasonNation:bool = "shipAcesSeasonType == SC.Common.SHIP_ACES_TYPE.NATION")
		(var isShipAcesSeasonShipType:bool = "shipAcesSeasonType == SC.Common.SHIP_ACES_TYPE.SHIP_TYPE")

		(struct sseShipAcesRoute =		PULL_ROUTE(_id = "SC.Ui_windows.ROUTE.SSE_SHIP_ACES"))
		(struct sseOpenEndedRoute =		PULL_ROUTE(_id = "SC.Ui_windows.ROUTE.SSE_OPEN_ENDED"))
		(struct sseNewbieQuestsRoute =	PULL_ROUTE(_id = "SC.Ui_windows.ROUTE.SSE_NEWBIE_QUESTS"))

		(var isCommonSse:bool = "!sseShipAcesRoute.isActive && !sseOpenEndedRoute.isActive && !sseNewbieQuestsRoute.isActive")

		(var sseTitle:str = "isCommonSse	? sseTagName						? sseTagName
																				: 'IDS_BATTLE_TASKS'
											: sseNewbieQuestsRoute.isActive		? 'IDS_NEWBIE_QUESTS_COMMON_TITLE'
											: sseOpenEndedRoute.isActive		? 'IDS_PORTAL_SSE_COMMON_TITLE'
											: isShipAcesSeasonNation			? 'IDS_SHIP_ACES_NATION_TITLE'
											: isShipAcesSeasonShipType			? 'IDS_SHIP_ACES_SHIP_TYPE_TITLE'
																				: 'IDS_SHIP_ACES_COMMON_TITLE'")

		(var backgroundSelectedCategory:str = "	sseShipAcesRoute.isActive										? 'ship_aces'	:
												sseOpenEndedRoute.isActive || sseNewbieQuestsRoute.isActive		? 'default'		:
												sseEpicBackground												? sseEpicBackground
																												: 'default'")

		(var newbieQuestsExpireTimerEntity:dhEntity = "getSingleEntity(CC.newbieQuestsExpireTimer)")
		(var newbieQuestsExpireTimer:number = "newbieQuestsExpireTimerEntity.newbieQuestsExpireTimer.expire")

		(var renderStatusItem:str = "sseNewbieQuestsRoute.isActive 												? 'NewbieQuestsCategoryStatus' :
									isCommonSse || sseShipAcesRoute.isActive || sseOpenEndedRoute.isActive		? 'SseCategoryStatus'
																												: null")
	)
	(class $Fullsize)

	(block
		(class $FullsizeAbsolute)
		(style (alpha = 0))

		(controller $Animation
			(bindcall play duration=0.03 to="{ alpha: 1 }" action="kill" (event "startShow"))
			(bindcall play delay=0.25 duration=0.2 to = "{ alpha: 0 }" action="kill" (event "startHide"))

		)

		(element AnimatedBackground
			_selectedCategory = "backgroundSelectedCategory"
			_type = "SC.Ui_styles.ANIMATED_BG.SSE"
		)

	)

	(block
		(class $Fullsize)
		(style (paddingBottom = "{ 1280:M, 1920:LM }") (paddingTop = "{ 1280:M, 1920:LM }"))

		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 1)
			(style (width = 100%))

			(block
				(style (width = 100%))

				(element ModalWindowHeaderFullSize
					_windowName = "toUpper(tr(sseTitle))"
					_name = 'sse_header'
					_paddingRight = "M"
					_paddingLeft = "M"
					_methods = "[ { type:	'inputMapping.onAction',
									name:	'navigateTo',
									args:	{ route: SC.Ui_windows.ROUTE.MAIN }
								}]"
				)
			)

			(block
				(style (width = 100%) (height = 48px))
				
				(block 
					(bind visible "isCommonSse && activeTasks || sseShipAcesRoute.isActive || sseOpenEndedRoute.isActive || sseNewbieQuestsRoute.isActive && newbieQuestsExpireTimer >= 0")
					(style (width = 100%))

					(block
						(style (width = 100%) (align = "center") (marginTop = "M") (marginBottom = "M"))

						(controller $Animation
							(bindcall play
								keyframes = "[
									{ time:0,		to:{ alpha:0, visualOffsetY: 10px }},
									{ time:0.15,	to:{ alpha:1, visualOffsetY: 0px }, easing:Easing.quad_out}
								]"
								action = "kill"
								(bind trigger "sseTitle")
							)
						)

						(controller $Instance
							(bind enabled "renderStatusItem && !((isCommonTaskCategory && isCommonSse) || !sseTitle)")
							(bind renderer "renderStatusItem")
						)
					)
					(block
						(bind visible "!(isCommonTaskCategory && isCommonSse) && sseTitle")
						(style (position = "absolute") (bottom = 0) (width = 100%))

						(controller $Animation
							(bindcall play
								delay = 0.03
								keyframes = "[
									{ time:0,		to:{ alpha:0, visualOffsetY: 10px }},
									{ time:0.15,	to:{ alpha:1, visualOffsetY: 0px }, easing:Easing.quad_out}
								]"
								action = "kill"
								(bind trigger "sseTitle")
							)
						)
						
						(element HorizontalDividerTwoPx)
					)
				)
			)
		)
		(block
			(class $Fullsize)
			(style (paddingRight = "M") (paddingLeft = "M") (paddingTop = "{ 720:M, 1080:L }") (paddingBottom = "{ 720:M, 1080:L }"))

			(element ModalWindowSseContent)
		)
	)
)

(def constant SSE_CONTENT_CHILDREN "{	'sse_common':			'SseCommonChild',
										'sse_ship_aces':		'SseShipAcesChild',
										'sse_open_ended':		'SseOpenEndedChild',
										'sse_newbie_quests':	'SseNewbieQuestsChild'
}")

(def element ModalWindowSseContent ()
	(macro DEFAULT_MODAL_WINDOW_SCOPE_EVENTS)
	(scope
		(event evBroadcastSelectedCategoryUpwards)
		(event evBroadcastSelectedCategoryDownwards)

		(var routeEntity:dhEntity = "getPrimaryEntity(CC.route, SC.Ui_windows.ROUTE.SSE)")
		(var activeChild:str= "routeEntity.route.activeChild" (event "routeEntity.route.evActiveChildChanged"))

		(var sseWindowState:dhComponent =	"getSingleEntity(CC.sseWindowState).sseWindowState")
		(var selectedCategoryId:str =		"sseWindowState.selectedTag"		(event "sseWindowState.evChanged"))
		(var selectedContainerId:str =		"sseWindowState.selectedContainer"	(event "sseWindowState.evChanged"))
		(var itemToShow:str =				"sseWindowState.itemToShow"			(event "sseWindowState.evChanged"))
		(var activeTaskIndex:number =		"sseWindowState.activeTaskIndex"	(event "sseWindowState.evChanged"))
		
		
		(var selectedContainerEntity:dhEntity = "getPrimaryEntity(CC.sseCore, selectedContainerId)")
		(var isChain:bool =	"selectedContainerEntity.hasComponent(CC.sseChain)")
		(var isEpic:bool =	"selectedContainerEntity.hasComponent(CC.sseEpic)")

		
		(var itemsByCategoryCollection:dhCollection = "getCollection(CC.sseCore).getChildByPath('firstLineSSE.bySSETag.' + selectedCategoryId)")
		(var isEmptyCategory:bool = "!toBool(itemsByCategoryCollection.length)")

		
		(var parentSseChainEntity:dhEntity = "getPrimaryEntity(CC.sseCore, isChain ? selectedContainerEntity.sseCore.id : null)")
		(var parentChainTasksNum:number = "parentSseChainEntity.progress.max" (event "parentSseChainEntity.progress.evChanged"))

		(var parentSseTagEntity:dhEntity = "getPrimaryEntity(CC.sseTag, isEpic ? selectedContainerEntity.sseCore.tag : null)")
		(var parentEpicsNum:number = "parentSseTagEntity.sseTag.epicsTotal" (event "parentSseTagEntity.sseTag.evChanged"))
		(var parentLength:number = "isEpic ? parentEpicsNum : isChain ? parentChainTasksNum : 0")

		
		(var epicTasksCollection:dhCollection = "getCollection(CC.sseTask).getChildByPath('SSECoreTasks.byEpicId.'  + selectedContainerId)")
		(var chainTasksCollection:dhCollection = "getCollection(CC.sseTask).getChildByPath('SSECoreTasks.byChainId.' + selectedContainerId)")

		
		(var detailedViewEntity:dhEntity = "getPrimaryEntity(CC.sseCore, itemToShow)")
		
		(macro STAGE_SIZE)
		(var centeredIndent:number = "((stageWidth - SSE_DEFAULT_CONTENT_WIDTH) / 2) - SSE_NAVIGATION_WIDTH")
		(var isSmallStageWidth:bool = "centeredIndent <= 0")

		(struct sseShipAcesRoute =		PULL_ROUTE(_id = "SC.Ui_windows.ROUTE.SSE_SHIP_ACES"))
		(struct sseOpenEndedRoute =		PULL_ROUTE(_id = "SC.Ui_windows.ROUTE.SSE_OPEN_ENDED"))
		(struct sseNewbieQuestsRoute =	PULL_ROUTE(_id = "SC.Ui_windows.ROUTE.SSE_NEWBIE_QUESTS"))

		(var isCommonSse:bool = "!sseShipAcesRoute.isActive && !sseOpenEndedRoute.isActive && !sseNewbieQuestsRoute.isActive")
		(var renderChild:str = "isCommonSse								? SSE_CONTENT_CHILDREN['sse_common'] :
								activeChild in SSE_CONTENT_CHILDREN		? SSE_CONTENT_CHILDREN[activeChild]
																		: ''")
	)
	(dispatch evBroadcastSelectedCategoryDownwards dir="EventDirection.DOWN" (event "evBroadcastSelectedCategoryUpwards"))

	(class $Fullsize)
	(style (flow = "horizontal"))

	(block 
		(macro DEFAULT_MODAL_WINDOW_ANIMATION 2)

		(style
			(width = "{ 1280:250px, 1920:320px }")
			(height = 100%)
			(marginLeft = "-M")
			(marginRight = "{ 1280:M, 1920:L }")
		)

		(scrollArea
			(class $Fullsize)
			(style (backgroundColor = "NO_COLOR"))

			(hscrollPolicy = 'off')
			(vscrollPolicy = 'auto')
			(verticalSlider = 'ScrollBarVLight')
			
			(topShadow = 'ScrollAreaShadowTop')
			(bottomShadow = 'ScrollAreaShadowBottom')

			(wheelScrollSpeed = 1.0)
			(wheelScrollAcceleration = 0.8)

			(activeControlsAlpha = 1)
			(inactiveControlsAlpha = 0.5)

			(content
				(style (width = 100%))

				(element SseCategories)
			)
		)
	)

	(block
		(style
			(height = 100%)
			(bind width "isSmallStageWidth		? 100%	: SSE_DEFAULT_CONTENT_WIDTH")
			(bind marginLeft "isSmallStageWidth	? 0		: centeredIndent")
		)

		(controller $Instance
			(bind enabled "renderChild")
			(bind renderer "renderChild")
			(args
				_isEmptyCategory = "isEmptyCategory"
				_parentLength = "parentLength"
				_entityDetailedId = "detailedViewEntity.id"
				_isEpic = "isEpic"
				_isChain = "isChain"
				_itemsByCategory = "itemsByCategoryCollection"
				_epicTasks = "epicTasksCollection"
				_chainTasks = "chainTasksCollection"
				_activeTaskIndex = "activeTaskIndex"
			)
			(reuseElement = true)
		)
	)
)