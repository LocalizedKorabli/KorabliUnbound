(def constant CREW_FILTER_BLOCK_WIDTH {
	NATION:		247px,
	CREW_TYPE:	172px
})

(def element CrewFiltersInfotip ()
	(scope
		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE)
	)

	(macro HIDE_UI_ON_SHIPOVERVIEW)
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP "true")

	(name = 'CrewFiltersInfotipClip')

	(element INFOTIP_SYSTEM_DEFAULT_CONTAINER _isAutoSize = true
		(element CrewFilterBlock
			_filterType = "SC.Common.CREW_FILTER_TYPE.CREW_NATION"
		)

		(element HorizontalDividerTwoPx)

		(element CrewFilterBlock
			_filterType = "SC.Common.CREW_FILTER_TYPE.CREW_TYPE"
		)

		(element HorizontalDividerTwoPx)

		(block
			(style
				(width = 100%)
				(paddingTop = "SXS")
				(paddingBottom = "SXS")
				(paddingLeft = "M")
				(paddingRight = "M")
			)

			(element DefaultButton
				_label =	'IDS_RESET_CREW_FILTERS_BUTTON_LABEL'
				_width =	100%
				_size =		"SIZE.SMALL"
				_type =		"SC.Ui_styles.BUTTON_TYPE.SECONDARY"
				_methods =	"[{ type: 'direct.action', name: CREW_FILTERS_ACTIONS.RESET_ALL, args: {} }]"
			)
		)
	)
)

(def element CrewFilterBlock (_filterType:str)
	(scope
		(var collection:dhCollection =	"getCollection(CC.crewFilter).getChildByPath('byFilterType.' + _filterType)")
		(var collectionLength:number =	"collection.length")
		(var isCrewTypeFilter:bool =	"_filterType == SC.Common.CREW_FILTER_TYPE.CREW_TYPE")
		(var title:str =				"isCrewTypeFilter ? 'IDS_CREW_TYPE' : 'IDS_NATION'")
	)

	(style
		(bind width "isCrewTypeFilter ? CREW_FILTER_BLOCK_WIDTH.CREW_TYPE : CREW_FILTER_BLOCK_WIDTH.NATION")
		(paddingTop = "M")
		(paddingBottom = "SXS")
		(paddingLeft = "M")
		(paddingRight = "M")
	)

	(tf
		(class $TextDefaultBold17NM)
		(style
			(marginBottom = "SXS")
			(alpha = "TA")
		)

		(bind text "title")
	)

	(block
		(style
			(bind flow "isCrewTypeFilter ? vertical : tile_vertical")
			(width = 100%)
			(height = 132px)
			(vgap = "S")
		)

		(controller $Repeat renderer='CrewFilterItem'
			(bind count "collectionLength")
			(args
				_filterCollection = "collection"
			)
		)
	)
)

(def element CrewFilterItem (_filterCollection:dhCollection)
	(scope
		(var filterEntity:dhEntity =	"_filterCollection[$index]")
		(var filterType:str =			"filterEntity.crewFilter.type ?: ''")
		(var renderItem:str =			"filterType == SC.Common.CREW_FILTER_TYPE.CREW_TYPE ? 'CrewTypeCheckBox' : 'CrewNationCheckBox'")
	)
	
	(controller $Instance
		(bind renderer "renderItem")
		(bind enabled "renderItem")
		(args
			_filterEntity = "filterEntity"
		)
	)
)

(def element CrewTypeCheckBox (_filterEntity:dhEntity)
	(scope
		(var filterComponent:dhComponent = "_filterEntity.crewFilter")

		(var filterType:str =	"filterComponent.type	?: ''")
		(var filterValue:str =	"filterComponent.value	?: ''")
		(var isSelected:bool =	"filterComponent.selected" (event "filterComponent.evSelectedChanged"))
		(var isEnabled:bool =	"filterComponent.enabled" (event "filterComponent.evEnabledChanged"))

		(var statusTooltipData:dict = "isEnabled	? {	_text: toUpper('IDS_HINT_CHECKBOX_CREW_FILTER_TYPE_' + filterValue),
														_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.DEFAULT }
													: {	_text: toUpper('IDS_HINT_CHECKBOX_CREW_FILTER_TYPE_NOT_AVAILABLE_' + filterValue),
														_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION }")
	)

	(bind name "'CrewCheckBox_' + filterType + '_' + filterValue")
	(style (width = 100%))

	(element CheckBox
		_isChecked =					"isSelected"
		_customLabelInstance =			'CheckBoxCrewTypeLabel'
		_customLabelInstanceParams =	"{ _crewTypeStr: filterValue }"
		_statusTooltipData =			"statusTooltipData"
		_enabled =						"isEnabled"
		_methods =						"[{ type: 'direct.action', name: CREW_FILTERS_ACTIONS.SET, args: [ _filterEntity.id, !isSelected ] }]"
	)
)

(def element CrewNationCheckBox (_filterEntity:dhEntity)
	(scope
		(var filterComponent:dhComponent = "_filterEntity.crewFilter")

		(var filterType:str =	"filterComponent.type	?: ''")
		(var filterValue:str =	"filterComponent.value	?: ''")
		(var isSelected:bool =	"filterComponent.selected" (event "filterComponent.evSelectedChanged"))
		(var isEnabled:bool =	"filterComponent.enabled" (event "filterComponent.evEnabledChanged"))

		(var isCommonCrewCheckBox:bool = "filterValue == SC.Common.NATION.COMMON")
		(var statusTooltipData:dict = "isEnabled	? {	_text: isCommonCrewCheckBox	? 'IDS_HINT_CHECKBOX_CREW_FILTER_NO_NATION'
																					: subst('IDS_HINT_CHECKBOX_CREW_FILTER_FOR_NATION', [], { _nationName: tr(toUpper('IDS_' + filterValue + '_GENITIVE')) }),
														_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.DEFAULT }
													: {	_text: isCommonCrewCheckBox	? 'IDS_HINT_CHECKBOX_CREW_FILTER_NO_NATION_NOT_AVAILABLE'
																					: subst('IDS_HINT_CHECKBOX_CREW_FILTER_FOR_NATION_NOT_AVAILABLE', [], { _nationName: tr(toUpper('IDS_' + filterValue + '_GENITIVE')) }),
														_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION }")
	)

	(bind name "'CrewCheckBox_' + filterType + '_' + filterValue")
	(style (width = 80px))

	(element CheckBox
		_isChecked =					"isSelected"
		_customLabelInstance =			'CheckBoxNationLabel'
		_customLabelInstanceParams =	"{ _shipCountry: filterValue }"
		_statusTooltipData =			"statusTooltipData"
		_enabled =						"isEnabled"
		_methods =						"[{ type: 'direct.action', name: CREW_FILTERS_ACTIONS.SET, args: [ _filterEntity.id, !isSelected ] }]"
	)
)

(def element CheckBoxCrewTypeLabel (_params:dict)
	(style
		(marginLeft = "S")
		(marginTop = "XXS")
	)

	(element CrewTypeLabel
		_crewTypeStr = "_params._crewTypeStr"
	)
)

(def element CrewTypeLabel (_crewTypeStr:str)
	(style
		(flow = "horizontal")
		(align = "middle")
	)

	(block
		(style (marginRight = "S"))

		(element RarityRibbon
			_rarity = "SC.Common.COMMANDER_CLASSIFICATIONS[_crewTypeStr]"
		)
	)

	(tf
		(class $TextDefault17NM)
		(style (alpha = "TA"))

		(bind text "'IDS_CREW_TYPE_' + _crewTypeStr")
	)
)

(def element CrewAppliedFilter (_filterType:str)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(var crewFiltersCollection:dhCollection =	"getCollection(CC.crewFilter).getChildByPath('byFilterType.' + _filterType + '.selected.sorted')")
		(var crewFiltersCollectionLength:number =	"crewFiltersCollection.length")
		(var isAppliedFiltersVisible:bool = 		"crewFiltersCollectionLength > 0")

		(var itemRenderer:str = "_filterType == SC.Common.CREW_FILTER_TYPE.CREW_TYPE ? 'CrewFilterCrewType' : 'CrewFilterTinyNationFlag'")

		(var isInfotipVisible:bool = false)
		(var state:number = "	isInfotipVisible	? SC.Ui_styles.BUTTON_STATE.SELECTED :
								mouseDown			? SC.Ui_styles.BUTTON_STATE.DOWN :
								rollOver			? SC.Ui_styles.BUTTON_STATE.OVER
													: SC.Ui_styles.BUTTON_STATE.UP")
		(var buttonAlpha:number =		"APPLIED_FILTERS_BUTTON_ALPHA[state]")
		(var closeIconAlpha:number =	"APPLIED_FILTERS_BUTTON_CLOSE_ALPHA[state]")

		(var backgroundPath:str = "rollOver || mouseDown || isInfotipVisible	? 'url:../service_kit/buttons/button_dock/down.png'
																				: ''")
	)
	(bind visible "isAppliedFiltersVisible")

	(style (backgroundColor = "NO_COLOR"))

	(macro MOUSE_EVENTS_DISPATCHER)
	(macro SOUND_HANDLER "'button_secondary'")

	(block
		(class $FullsizeAbsolute)
		(style (backgroundColor = "NO_COLOR"))

		(block
			(class $Fullsize)
			(style
				(scale9grid = 4)
				(bind backgroundImage "backgroundPath")
			)
		)

		(controller $Tooltip
			(renderer = 'SimpleStatusTooltip')
			(args
				_unifiedStatus =	"SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
				_text =				"'IDS_APPLIED_FILTER_HINT_' + _filterType"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(controller $Tooltip
			(renderer = 'CrewAppliedFilterInfotip')
			(args
				_filterType = "_filterType"
			)
			(macro CREW_INFOTIP_BEHAVIOUR "1")
			(bind isInfotipVisible "true" init=false watch=false on='evStartShow')
			(bind isInfotipVisible "false" init=false watch=false on='evHide')
		)
	)

	(hblock
		(style
			(marginLeft = "XXS")
			(marginRight = "S")
			(align = "middle")
			(alpha = "buttonAlpha")
		)

		(controller $Animation
			(bindcall play
				to = "{alpha: buttonAlpha}"
				duration = 0.2
				watch = false
				(bind trigger "state")
			)
		)

		(hblock
			(style (hitTest = false))

			(controller $Repeat
				(bind renderer "itemRenderer")
				(bind count "crewFiltersCollectionLength")
				(args
					_collection = "crewFiltersCollection"
				)
			)
		)

		(block
			(style (width = 18px))

			(block
				(bind name "'CrewFilterClose_' + _filterType")

				(style
					(marginLeft = 6px)
					(marginTop = "S")
					(height = 21px)
					(alpha = "closeIconAlpha")
				)

				(element CloseButton
					_methods =		"[ { type: 'direct.action', name: CREW_FILTERS_ACTIONS.RESET_GROUP, args: [_filterType] } ]"
					_tooltipText =	'IDS_HINT_RESET_FILTER'
				)

				(controller $Animation
					(bindcall play
						to = "{alpha: closeIconAlpha}"
						duration = 0.2
						(bind trigger "state")
					)
				)
			)
		)
	)
)

(def element CrewAppliedFilterInfotip (_filterType:str)
	(scope
		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE)
	)

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP "true")
	(macro HIDE_UI_ON_SHIPOVERVIEW)
	(name = 'CrewAppliedFilterInfotip')

	(element INFOTIP_SYSTEM_DEFAULT_CONTAINER _isAutoSize=true
		(element CrewFilterBlock
			_filterType = "_filterType"
		)
	)
)

(def element CrewFilterTinyNationFlag (_collection:dhCollection)
	(scope
		(var filterEntity:dhEntity = "_collection[$index]")
		(var value:str = "filterEntity.crewFilter.value ?: ''" (event "filterEntity.crewFilter.evUpdate"))
	)

	(style (marginLeft = "XS"))

	(element NationFlagsTiny
		_shipCountry = "value"
	)
)

(def element CrewFilterCrewType (_collection:dhCollection)
	(scope
		(var filterEntity:dhEntity = "_collection[$index]")
		(var value:str = "filterEntity.crewFilter.value ?: ''" (event "filterEntity.crewFilter.evUpdate"))
	)

	(style (marginLeft = "XS"))

	(element RarityRibbon
		_rarity = "SC.Common.COMMANDER_CLASSIFICATIONS[value]"
	)
)